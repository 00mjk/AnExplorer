apply plugin: 'com.android.application'

android {
    compileSdkVersion 24
    buildToolsVersion '25.0.0'

    defaultConfig {
        versionName "3.2"
        versionCode = 48
        minSdkVersion 16
        targetSdkVersion 24
        vectorDrawables.useSupportLibrary = true
    }
    signingConfigs {
        release
    }
    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources true
            proguardFiles 'proguard/proguard-project.pro',
                    'proguard/proguard-guava.pro',
                    'proguard/proguard-google-play-services.pro'
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            proguardFiles 'proguard/proguard-project.pro',
                    'proguard/proguard-guava.pro',
                    'proguard/proguard-google-play-services.pro'
        }
    }
    flavorDimensions "release", "default"
    productFlavors {
        free {
            applicationId "dev.dworks.apps.anexplorer"
            dimension "default"
        }
        pro {
            applicationId "dev.dworks.apps.anexplorer.pro"
            dimension "default"
        }
        play {
            dimension "release"
        }
        other {
            dimension "release"
        }
        underground {
            applicationId "dev.dworks.apps.anexplorer.underground"
            dimension "default"
        }
    }
    lintOptions {
        abortOnError false
    }
    aaptOptions {
        noCompress 'apk'
    }
}

ext {
    supportLibVersion = '24.1.1'
    gmsVersion = '9.2.1'
}

dependencies {
    compile files('libs/RootTools.jar')
    compile 'com.google.guava:guava:18.0'
    compile 'com.jaredrummler:android-processes:+'
    compile "com.android.support:support-v4:${supportLibVersion}"
    compile "com.android.support:appcompat-v7:${supportLibVersion}"
    compile "com.android.support:design:${supportLibVersion}"
    freeCompile "com.google.firebase:firebase-core:${gmsVersion}"
    freeCompile "com.google.firebase:firebase-crash:${gmsVersion}"
    freeCompile "com.google.firebase:firebase-ads:${gmsVersion}"
    otherCompile "com.google.firebase:firebase-core:${gmsVersion}"
    otherCompile "com.google.firebase:firebase-crash:${gmsVersion}"
    otherCompile "com.google.firebase:firebase-ads:${gmsVersion}"
}

def props = new Properties()
props.load(new FileInputStream(rootProject.file("keystore.properties")))
android.signingConfigs.release.storeFile rootProject.file(props.keyStore)
android.signingConfigs.release.storePassword props.keyStorePassword
android.signingConfigs.release.keyAlias props.keyAlias
android.signingConfigs.release.keyPassword props.keyAliasPassword

if (getGradle().getStartParameter().getTaskRequests().toString().contains("Free")) {
    apply plugin: 'com.google.gms.google-services'
}